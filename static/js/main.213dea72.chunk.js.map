{"version":3,"sources":["ColorsArray.js","App.js","reportWebVitals.js","index.js"],"names":["colorArray","quotesDB","App","useState","quote","setQoute","author","setAuthor","setRandomNumber","quotesData","setQuotesData","colors","setColors","fetchQuote","url","a","fetch","respone","json","parsedJSON","quotes","console","log","useEffect","className","id","style","backgroundColor","color","textAlign","justifyContent","display","type","href","encodeURI","onClick","randomMachine","Math","floor","random","length","ColorArray","clickNewQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAWeA,G,MAXI,CAAC,UAAW,UAAW,UAAW,UAAW,UAC5D,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,Y,OCL5CC,EAAW,yIAwDAC,MAtDf,WACE,MAA0BC,mBAAS,iFAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,kBAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,mBAAS,GAAjD,mBAAqBK,GAArB,WACA,EAAoCL,mBAAS,IAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAA4BP,mBAAS,WAArC,mBAAOQ,EAAP,KAAeC,EAAf,KAEIC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAMF,GADX,cACXG,EADW,gBAEQA,EAAQC,OAFhB,OAEXC,EAFW,OAGjBT,EAAcS,EAAWC,QACzBC,QAAQC,IAAIH,GAJK,2CAAH,sDAkBd,OAZFI,qBAAU,WACRV,EAAWZ,KACX,CAACA,IAWC,qBAAKuB,UAAU,kBAAkBC,GAAG,YAAYC,MAAO,CAACC,gBAAiBhB,GAAzE,SACE,qBAAKa,UAAU,gBAAf,SACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKC,GAAG,OAAR,UACE,mBAAGD,UAAU,uBACb,mBAAGE,MAAO,CAACE,MAAMjB,GAAjB,SAA2BP,OAE7B,qBAAKqB,GAAG,SAAR,SACE,oBAAGC,MAAO,CAACG,UAAU,MAAOD,MAAMjB,GAAlC,cAA6CL,OAE/C,sBAAKoB,MAAO,CAACI,eAAe,gBAAiBC,QAAQ,QAArD,UACE,mBAAGC,KAAK,SAASR,UAAU,kBAAkBC,GAAG,cAAcQ,KAAMC,UAAU,6CAAD,OAA8C9B,EAA9C,YAAuDE,IAApI,SACE,mBAAGkB,UAAU,oBAEf,wBAAQQ,KAAK,SAASR,UAAU,kBAAkBW,QAAS,kBAzBrD,WACpB,IAAIC,EAAgBC,KAAKC,MAAMD,KAAKE,SAAW9B,EAAW+B,QAC1DhC,EAAgB4B,GAChBxB,EAAU6B,EAAWL,IACrB/B,EAASI,EAAW2B,GAAehC,OACnCG,EAAUE,EAAW2B,GAAe9B,QAoB0CoC,IAAiBjB,GAAG,YAApF,sCCpCDkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.213dea72.chunk.js","sourcesContent":["const colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n\nexport default colorArray;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport ColorArray from './ColorsArray';\n\nlet quotesDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  const [quote, setQoute] = useState(\"The most difficult thing is the decision to act, the rest is merely tenacity.\");\n  const [author, setAuthor] = useState(\"Amelia Earhart\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotesData, setQuotesData] = useState(\"\");\n  const [colors, setColors] = useState(\"#FF6633\")\n\nconst fetchQuote = async (url) =>{\n  const respone = await fetch(url)\n  const parsedJSON = await respone.json()\n  setQuotesData(parsedJSON.quotes)\n  console.log(parsedJSON)   \n} \nuseEffect(()=>{\n  fetchQuote(quotesDB)\n},[quotesDB])\n\nconst clickNewQuote = ()=>{\n  let randomMachine = Math.floor(Math.random() * quotesData.length)\n  setRandomNumber(randomMachine)\n  setColors(ColorArray[randomMachine])\n  setQoute(quotesData[randomMachine].quote)\n  setAuthor(quotesData[randomMachine].author)\n}\n\n  return (\n    <div className=\"container-fluid\" id=\"quote-box\" style={{backgroundColor: colors}}>\n      <div className=\"row test-card\">\n        <div className=\"col-sm-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div id=\"text\">\n                <i className=\"fas fa-quote-right\"></i>\n                <p style={{color:colors}}>{quote}</p>\n              </div>\n              <div id=\"author\">\n                <p style={{textAlign:'end', color:colors}}>-{author}</p>\n              </div>\n              <div style={{justifyContent:'space-between', display:'flex'}}>\n                <a type=\"button\" className=\"btn btn-success\" id=\"tweet-quote\" href={encodeURI(`https://www.twitter.com/intent/tweet?text=${quote}-${author}`)}>\n                  <i className=\"bi bi-twitter\"></i>\n                </a>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={()=> clickNewQuote()} id=\"new-quote\">\n                  New quote\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}